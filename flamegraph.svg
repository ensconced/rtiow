<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1030" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1013.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1013.00"> </text><svg id="frames" x="10" width="1180" total_samples="11410"><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="0.1139%" y="869" width="0.0175%" height="15" fill="rgb(227,0,7)" fg:x="13" fg:w="2"/><text x="0.3639%" y="879.50"></text></g><g><title>rtiow`rand::distributions::float::_&lt;impl rand::distributions::distribution::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (11 samples, 0.10%)</title><rect x="0.1315%" y="869" width="0.0964%" height="15" fill="rgb(217,0,24)" fg:x="15" fg:w="11"/><text x="0.3815%" y="879.50"></text></g><g><title>rtiow`rand_chacha::guts::refill_wide::impl_avx2 (2 samples, 0.02%)</title><rect x="0.2103%" y="853" width="0.0175%" height="15" fill="rgb(221,193,54)" fg:x="24" fg:w="2"/><text x="0.4603%" y="863.50"></text></g><g><title>rtiow`rand::rngs::thread::thread_rng (2 samples, 0.02%)</title><rect x="0.2717%" y="853" width="0.0175%" height="15" fill="rgb(248,212,6)" fg:x="31" fg:w="2"/><text x="0.5217%" y="863.50"></text></g><g><title>rtiow`rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (2 samples, 0.02%)</title><rect x="0.4733%" y="821" width="0.0175%" height="15" fill="rgb(208,68,35)" fg:x="54" fg:w="2"/><text x="0.7233%" y="831.50"></text></g><g><title>rtiow`&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (2 samples, 0.02%)</title><rect x="0.4733%" y="805" width="0.0175%" height="15" fill="rgb(232,128,0)" fg:x="54" fg:w="2"/><text x="0.7233%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`getentropy (2 samples, 0.02%)</title><rect x="0.4733%" y="789" width="0.0175%" height="15" fill="rgb(207,160,47)" fg:x="54" fg:w="2"/><text x="0.7233%" y="799.50"></text></g><g><title>rtiow`rand::distributions::float::_&lt;impl rand::distributions::distribution::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (17 samples, 0.15%)</title><rect x="0.3769%" y="837" width="0.1490%" height="15" fill="rgb(228,23,34)" fg:x="43" fg:w="17"/><text x="0.6269%" y="847.50"></text></g><g><title>rtiow`rand_chacha::guts::refill_wide::impl_avx2 (3 samples, 0.03%)</title><rect x="0.4996%" y="821" width="0.0263%" height="15" fill="rgb(218,30,26)" fg:x="57" fg:w="3"/><text x="0.7496%" y="831.50"></text></g><g><title>rtiow`rtiow::camera::Camera::get_ray (40 samples, 0.35%)</title><rect x="0.2366%" y="869" width="0.3506%" height="15" fill="rgb(220,122,19)" fg:x="27" fg:w="40"/><text x="0.4866%" y="879.50"></text></g><g><title>rtiow`rtiow::vec3::Vec3::random_in_unit_disk (34 samples, 0.30%)</title><rect x="0.2892%" y="853" width="0.2980%" height="15" fill="rgb(250,228,42)" fg:x="33" fg:w="34"/><text x="0.5392%" y="863.50"></text></g><g><title>rtiow`rand::rngs::thread::thread_rng (7 samples, 0.06%)</title><rect x="0.5259%" y="837" width="0.0613%" height="15" fill="rgb(240,193,28)" fg:x="60" fg:w="7"/><text x="0.7759%" y="847.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.05%)</title><rect x="0.7099%" y="821" width="0.0526%" height="15" fill="rgb(216,20,37)" fg:x="81" fg:w="6"/><text x="0.9599%" y="831.50"></text></g><g><title>rtiow`&lt;rtiow::material::Lambertian as rtiow::material::Material&gt;::scatter (16 samples, 0.14%)</title><rect x="0.7011%" y="853" width="0.1402%" height="15" fill="rgb(206,188,39)" fg:x="80" fg:w="16"/><text x="0.9511%" y="863.50"></text></g><g><title>rtiow`rtiow::vec3::Vec3::random_from_range (15 samples, 0.13%)</title><rect x="0.7099%" y="837" width="0.1315%" height="15" fill="rgb(217,207,13)" fg:x="81" fg:w="15"/><text x="0.9599%" y="847.50"></text></g><g><title>rtiow`rand::distributions::float::_&lt;impl rand::distributions::distribution::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (9 samples, 0.08%)</title><rect x="0.7625%" y="821" width="0.0789%" height="15" fill="rgb(231,73,38)" fg:x="87" fg:w="9"/><text x="1.0125%" y="831.50"></text></g><g><title>rtiow`rand_chacha::guts::refill_wide::impl_avx2 (3 samples, 0.03%)</title><rect x="0.8151%" y="805" width="0.0263%" height="15" fill="rgb(225,20,46)" fg:x="93" fg:w="3"/><text x="1.0651%" y="815.50"></text></g><g><title>rtiow`&lt;rtiow::material::Metal as rtiow::material::Material&gt;::scatter (3 samples, 0.03%)</title><rect x="0.8414%" y="853" width="0.0263%" height="15" fill="rgb(210,31,41)" fg:x="96" fg:w="3"/><text x="1.0914%" y="863.50"></text></g><g><title>rtiow`rtiow::vec3::Vec3::random_from_range (2 samples, 0.02%)</title><rect x="0.8501%" y="837" width="0.0175%" height="15" fill="rgb(221,200,47)" fg:x="97" fg:w="2"/><text x="1.1001%" y="847.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (86 samples, 0.75%)</title><rect x="0.8677%" y="853" width="0.7537%" height="15" fill="rgb(226,26,5)" fg:x="99" fg:w="86"/><text x="1.1177%" y="863.50"></text></g><g><title>rtiow`&lt;rtiow::material::Lambertian as rtiow::material::Material&gt;::scatter (4 samples, 0.04%)</title><rect x="1.6915%" y="837" width="0.0351%" height="15" fill="rgb(249,33,26)" fg:x="193" fg:w="4"/><text x="1.9415%" y="847.50"></text></g><g><title>rtiow`rtiow::vec3::Vec3::random_from_range (4 samples, 0.04%)</title><rect x="1.6915%" y="821" width="0.0351%" height="15" fill="rgb(235,183,28)" fg:x="193" fg:w="4"/><text x="1.9415%" y="831.50"></text></g><g><title>rtiow`rand::distributions::float::_&lt;impl rand::distributions::distribution::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (2 samples, 0.02%)</title><rect x="1.7090%" y="805" width="0.0175%" height="15" fill="rgb(221,5,38)" fg:x="195" fg:w="2"/><text x="1.9590%" y="815.50"></text></g><g><title>rtiow`&lt;rtiow::material::Metal as rtiow::material::Material&gt;::scatter (2 samples, 0.02%)</title><rect x="1.7266%" y="837" width="0.0175%" height="15" fill="rgb(247,18,42)" fg:x="197" fg:w="2"/><text x="1.9766%" y="847.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (61 samples, 0.53%)</title><rect x="1.7441%" y="837" width="0.5346%" height="15" fill="rgb(241,131,45)" fg:x="199" fg:w="61"/><text x="1.9941%" y="847.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (10 samples, 0.09%)</title><rect x="2.3138%" y="821" width="0.0876%" height="15" fill="rgb(249,31,29)" fg:x="264" fg:w="10"/><text x="2.5638%" y="831.50"></text></g><g><title>rtiow`&lt;rtiow::material::Lambertian as rtiow::material::Material&gt;::scatter (4 samples, 0.04%)</title><rect x="2.4189%" y="805" width="0.0351%" height="15" fill="rgb(225,111,53)" fg:x="276" fg:w="4"/><text x="2.6689%" y="815.50"></text></g><g><title>rtiow`rtiow::vec3::Vec3::random_from_range (4 samples, 0.04%)</title><rect x="2.4189%" y="789" width="0.0351%" height="15" fill="rgb(238,160,17)" fg:x="276" fg:w="4"/><text x="2.6689%" y="799.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (6 samples, 0.05%)</title><rect x="2.4540%" y="805" width="0.0526%" height="15" fill="rgb(214,148,48)" fg:x="280" fg:w="6"/><text x="2.7040%" y="815.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (3 samples, 0.03%)</title><rect x="2.5416%" y="773" width="0.0263%" height="15" fill="rgb(232,36,49)" fg:x="290" fg:w="3"/><text x="2.7916%" y="783.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (3 samples, 0.03%)</title><rect x="2.5767%" y="757" width="0.0263%" height="15" fill="rgb(209,103,24)" fg:x="294" fg:w="3"/><text x="2.8267%" y="767.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (4 samples, 0.04%)</title><rect x="2.6030%" y="741" width="0.0351%" height="15" fill="rgb(229,88,8)" fg:x="297" fg:w="4"/><text x="2.8530%" y="751.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (2 samples, 0.02%)</title><rect x="2.7344%" y="581" width="0.0175%" height="15" fill="rgb(213,181,19)" fg:x="312" fg:w="2"/><text x="2.9844%" y="591.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (2 samples, 0.02%)</title><rect x="2.7695%" y="501" width="0.0175%" height="15" fill="rgb(254,191,54)" fg:x="316" fg:w="2"/><text x="3.0195%" y="511.50"></text></g><g><title>rtiow`&lt;rtiow::material::Lambertian as rtiow::material::Material&gt;::scatter (2 samples, 0.02%)</title><rect x="2.8221%" y="357" width="0.0175%" height="15" fill="rgb(241,83,37)" fg:x="322" fg:w="2"/><text x="3.0721%" y="367.50"></text></g><g><title>rtiow`rtiow::color_ray (13 samples, 0.11%)</title><rect x="2.8834%" y="69" width="0.1139%" height="15" fill="rgb(233,36,39)" fg:x="329" fg:w="13"/><text x="3.1334%" y="79.50"></text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (13 samples, 0.11%)</title><rect x="2.8834%" y="53" width="0.1139%" height="15" fill="rgb(226,3,54)" fg:x="329" fg:w="13"/><text x="3.1334%" y="63.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (12 samples, 0.11%)</title><rect x="2.8922%" y="37" width="0.1052%" height="15" fill="rgb(245,192,40)" fg:x="330" fg:w="12"/><text x="3.1422%" y="47.50"></text></g><g><title>rtiow`rtiow::color_ray (23 samples, 0.20%)</title><rect x="2.8834%" y="85" width="0.2016%" height="15" fill="rgb(238,167,29)" fg:x="329" fg:w="23"/><text x="3.1334%" y="95.50"></text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (10 samples, 0.09%)</title><rect x="2.9974%" y="69" width="0.0876%" height="15" fill="rgb(232,182,51)" fg:x="342" fg:w="10"/><text x="3.2474%" y="79.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (10 samples, 0.09%)</title><rect x="2.9974%" y="53" width="0.0876%" height="15" fill="rgb(231,60,39)" fg:x="342" fg:w="10"/><text x="3.2474%" y="63.50"></text></g><g><title>rtiow`rtiow::color_ray (32 samples, 0.28%)</title><rect x="2.8834%" y="101" width="0.2805%" height="15" fill="rgb(208,69,12)" fg:x="329" fg:w="32"/><text x="3.1334%" y="111.50"></text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (9 samples, 0.08%)</title><rect x="3.0850%" y="85" width="0.0789%" height="15" fill="rgb(235,93,37)" fg:x="352" fg:w="9"/><text x="3.3350%" y="95.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (9 samples, 0.08%)</title><rect x="3.0850%" y="69" width="0.0789%" height="15" fill="rgb(213,116,39)" fg:x="352" fg:w="9"/><text x="3.3350%" y="79.50"></text></g><g><title>rtiow`rtiow::color_ray (43 samples, 0.38%)</title><rect x="2.8834%" y="117" width="0.3769%" height="15" fill="rgb(222,207,29)" fg:x="329" fg:w="43"/><text x="3.1334%" y="127.50"></text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (11 samples, 0.10%)</title><rect x="3.1639%" y="101" width="0.0964%" height="15" fill="rgb(206,96,30)" fg:x="361" fg:w="11"/><text x="3.4139%" y="111.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (11 samples, 0.10%)</title><rect x="3.1639%" y="85" width="0.0964%" height="15" fill="rgb(218,138,4)" fg:x="361" fg:w="11"/><text x="3.4139%" y="95.50"></text></g><g><title>rtiow`rtiow::color_ray (58 samples, 0.51%)</title><rect x="2.8747%" y="133" width="0.5083%" height="15" fill="rgb(250,191,14)" fg:x="328" fg:w="58"/><text x="3.1247%" y="143.50"></text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (14 samples, 0.12%)</title><rect x="3.2603%" y="117" width="0.1227%" height="15" fill="rgb(239,60,40)" fg:x="372" fg:w="14"/><text x="3.5103%" y="127.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (14 samples, 0.12%)</title><rect x="3.2603%" y="101" width="0.1227%" height="15" fill="rgb(206,27,48)" fg:x="372" fg:w="14"/><text x="3.5103%" y="111.50"></text></g><g><title>rtiow`rtiow::color_ray (67 samples, 0.59%)</title><rect x="2.8747%" y="149" width="0.5872%" height="15" fill="rgb(225,35,8)" fg:x="328" fg:w="67"/><text x="3.1247%" y="159.50"></text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (9 samples, 0.08%)</title><rect x="3.3830%" y="133" width="0.0789%" height="15" fill="rgb(250,213,24)" fg:x="386" fg:w="9"/><text x="3.6330%" y="143.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (7 samples, 0.06%)</title><rect x="3.4005%" y="117" width="0.0613%" height="15" fill="rgb(247,123,22)" fg:x="388" fg:w="7"/><text x="3.6505%" y="127.50"></text></g><g><title>rtiow`rtiow::color_ray (78 samples, 0.68%)</title><rect x="2.8747%" y="165" width="0.6836%" height="15" fill="rgb(231,138,38)" fg:x="328" fg:w="78"/><text x="3.1247%" y="175.50"></text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (11 samples, 0.10%)</title><rect x="3.4619%" y="149" width="0.0964%" height="15" fill="rgb(231,145,46)" fg:x="395" fg:w="11"/><text x="3.7119%" y="159.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (10 samples, 0.09%)</title><rect x="3.4706%" y="133" width="0.0876%" height="15" fill="rgb(251,118,11)" fg:x="396" fg:w="10"/><text x="3.7206%" y="143.50"></text></g><g><title>rtiow`rtiow::color_ray (86 samples, 0.75%)</title><rect x="2.8747%" y="181" width="0.7537%" height="15" fill="rgb(217,147,25)" fg:x="328" fg:w="86"/><text x="3.1247%" y="191.50"></text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (8 samples, 0.07%)</title><rect x="3.5583%" y="165" width="0.0701%" height="15" fill="rgb(247,81,37)" fg:x="406" fg:w="8"/><text x="3.8083%" y="175.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (8 samples, 0.07%)</title><rect x="3.5583%" y="149" width="0.0701%" height="15" fill="rgb(209,12,38)" fg:x="406" fg:w="8"/><text x="3.8083%" y="159.50"></text></g><g><title>rtiow`rtiow::color_ray (92 samples, 0.81%)</title><rect x="2.8659%" y="197" width="0.8063%" height="15" fill="rgb(227,1,9)" fg:x="327" fg:w="92"/><text x="3.1159%" y="207.50"></text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (5 samples, 0.04%)</title><rect x="3.6284%" y="181" width="0.0438%" height="15" fill="rgb(248,47,43)" fg:x="414" fg:w="5"/><text x="3.8784%" y="191.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (5 samples, 0.04%)</title><rect x="3.6284%" y="165" width="0.0438%" height="15" fill="rgb(221,10,30)" fg:x="414" fg:w="5"/><text x="3.8784%" y="175.50"></text></g><g><title>rtiow`rtiow::color_ray (100 samples, 0.88%)</title><rect x="2.8659%" y="213" width="0.8764%" height="15" fill="rgb(210,229,1)" fg:x="327" fg:w="100"/><text x="3.1159%" y="223.50"></text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (8 samples, 0.07%)</title><rect x="3.6722%" y="197" width="0.0701%" height="15" fill="rgb(222,148,37)" fg:x="419" fg:w="8"/><text x="3.9222%" y="207.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (5 samples, 0.04%)</title><rect x="3.6985%" y="181" width="0.0438%" height="15" fill="rgb(234,67,33)" fg:x="422" fg:w="5"/><text x="3.9485%" y="191.50"></text></g><g><title>rtiow`rtiow::color_ray (113 samples, 0.99%)</title><rect x="2.8659%" y="229" width="0.9904%" height="15" fill="rgb(247,98,35)" fg:x="327" fg:w="113"/><text x="3.1159%" y="239.50"></text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (13 samples, 0.11%)</title><rect x="3.7423%" y="213" width="0.1139%" height="15" fill="rgb(247,138,52)" fg:x="427" fg:w="13"/><text x="3.9923%" y="223.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (13 samples, 0.11%)</title><rect x="3.7423%" y="197" width="0.1139%" height="15" fill="rgb(213,79,30)" fg:x="427" fg:w="13"/><text x="3.9923%" y="207.50"></text></g><g><title>rtiow`rtiow::color_ray (123 samples, 1.08%)</title><rect x="2.8659%" y="245" width="1.0780%" height="15" fill="rgb(246,177,23)" fg:x="327" fg:w="123"/><text x="3.1159%" y="255.50"></text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (10 samples, 0.09%)</title><rect x="3.8563%" y="229" width="0.0876%" height="15" fill="rgb(230,62,27)" fg:x="440" fg:w="10"/><text x="4.1063%" y="239.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (9 samples, 0.08%)</title><rect x="3.8650%" y="213" width="0.0789%" height="15" fill="rgb(216,154,8)" fg:x="441" fg:w="9"/><text x="4.1150%" y="223.50"></text></g><g><title>rtiow`rtiow::color_ray (141 samples, 1.24%)</title><rect x="2.8659%" y="261" width="1.2358%" height="15" fill="rgb(244,35,45)" fg:x="327" fg:w="141"/><text x="3.1159%" y="271.50"></text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (18 samples, 0.16%)</title><rect x="3.9439%" y="245" width="0.1578%" height="15" fill="rgb(251,115,12)" fg:x="450" fg:w="18"/><text x="4.1939%" y="255.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (15 samples, 0.13%)</title><rect x="3.9702%" y="229" width="0.1315%" height="15" fill="rgb(240,54,50)" fg:x="453" fg:w="15"/><text x="4.2202%" y="239.50"></text></g><g><title>rtiow`rtiow::color_ray (153 samples, 1.34%)</title><rect x="2.8571%" y="277" width="1.3409%" height="15" fill="rgb(233,84,52)" fg:x="326" fg:w="153"/><text x="3.1071%" y="287.50"></text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (11 samples, 0.10%)</title><rect x="4.1017%" y="261" width="0.0964%" height="15" fill="rgb(207,117,47)" fg:x="468" fg:w="11"/><text x="4.3517%" y="271.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (11 samples, 0.10%)</title><rect x="4.1017%" y="245" width="0.0964%" height="15" fill="rgb(249,43,39)" fg:x="468" fg:w="11"/><text x="4.3517%" y="255.50"></text></g><g><title>rtiow`rtiow::color_ray (162 samples, 1.42%)</title><rect x="2.8571%" y="293" width="1.4198%" height="15" fill="rgb(209,38,44)" fg:x="326" fg:w="162"/><text x="3.1071%" y="303.50"></text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (9 samples, 0.08%)</title><rect x="4.1981%" y="277" width="0.0789%" height="15" fill="rgb(236,212,23)" fg:x="479" fg:w="9"/><text x="4.4481%" y="287.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (7 samples, 0.06%)</title><rect x="4.2156%" y="261" width="0.0613%" height="15" fill="rgb(242,79,21)" fg:x="481" fg:w="7"/><text x="4.4656%" y="271.50"></text></g><g><title>rtiow`rtiow::color_ray (175 samples, 1.53%)</title><rect x="2.8571%" y="309" width="1.5337%" height="15" fill="rgb(211,96,35)" fg:x="326" fg:w="175"/><text x="3.1071%" y="319.50"></text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (13 samples, 0.11%)</title><rect x="4.2770%" y="293" width="0.1139%" height="15" fill="rgb(253,215,40)" fg:x="488" fg:w="13"/><text x="4.5270%" y="303.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (12 samples, 0.11%)</title><rect x="4.2857%" y="277" width="0.1052%" height="15" fill="rgb(211,81,21)" fg:x="489" fg:w="12"/><text x="4.5357%" y="287.50"></text></g><g><title>rtiow`rtiow::color_ray (192 samples, 1.68%)</title><rect x="2.8571%" y="325" width="1.6827%" height="15" fill="rgb(208,190,38)" fg:x="326" fg:w="192"/><text x="3.1071%" y="335.50"></text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (17 samples, 0.15%)</title><rect x="4.3909%" y="309" width="0.1490%" height="15" fill="rgb(235,213,38)" fg:x="501" fg:w="17"/><text x="4.6409%" y="319.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (16 samples, 0.14%)</title><rect x="4.3996%" y="293" width="0.1402%" height="15" fill="rgb(237,122,38)" fg:x="502" fg:w="16"/><text x="4.6496%" y="303.50"></text></g><g><title>rtiow`rtiow::color_ray (211 samples, 1.85%)</title><rect x="2.8571%" y="341" width="1.8493%" height="15" fill="rgb(244,218,35)" fg:x="326" fg:w="211"/><text x="3.1071%" y="351.50">r..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (19 samples, 0.17%)</title><rect x="4.5399%" y="325" width="0.1665%" height="15" fill="rgb(240,68,47)" fg:x="518" fg:w="19"/><text x="4.7899%" y="335.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (18 samples, 0.16%)</title><rect x="4.5486%" y="309" width="0.1578%" height="15" fill="rgb(210,16,53)" fg:x="519" fg:w="18"/><text x="4.7986%" y="319.50"></text></g><g><title>rtiow`rtiow::color_ray (230 samples, 2.02%)</title><rect x="2.8484%" y="357" width="2.0158%" height="15" fill="rgb(235,124,12)" fg:x="325" fg:w="230"/><text x="3.0984%" y="367.50">r..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (18 samples, 0.16%)</title><rect x="4.7064%" y="341" width="0.1578%" height="15" fill="rgb(224,169,11)" fg:x="537" fg:w="18"/><text x="4.9564%" y="351.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (16 samples, 0.14%)</title><rect x="4.7239%" y="325" width="0.1402%" height="15" fill="rgb(250,166,2)" fg:x="539" fg:w="16"/><text x="4.9739%" y="335.50"></text></g><g><title>rtiow`rtiow::color_ray (252 samples, 2.21%)</title><rect x="2.8221%" y="373" width="2.2086%" height="15" fill="rgb(242,216,29)" fg:x="322" fg:w="252"/><text x="3.0721%" y="383.50">r..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (19 samples, 0.17%)</title><rect x="4.8642%" y="357" width="0.1665%" height="15" fill="rgb(230,116,27)" fg:x="555" fg:w="19"/><text x="5.1142%" y="367.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (17 samples, 0.15%)</title><rect x="4.8817%" y="341" width="0.1490%" height="15" fill="rgb(228,99,48)" fg:x="557" fg:w="17"/><text x="5.1317%" y="351.50"></text></g><g><title>rtiow`rtiow::color_ray (281 samples, 2.46%)</title><rect x="2.8221%" y="389" width="2.4628%" height="15" fill="rgb(253,11,6)" fg:x="322" fg:w="281"/><text x="3.0721%" y="399.50">rt..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (29 samples, 0.25%)</title><rect x="5.0307%" y="373" width="0.2542%" height="15" fill="rgb(247,143,39)" fg:x="574" fg:w="29"/><text x="5.2807%" y="383.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (24 samples, 0.21%)</title><rect x="5.0745%" y="357" width="0.2103%" height="15" fill="rgb(236,97,10)" fg:x="579" fg:w="24"/><text x="5.3245%" y="367.50"></text></g><g><title>rtiow`rtiow::color_ray (303 samples, 2.66%)</title><rect x="2.8221%" y="405" width="2.6556%" height="15" fill="rgb(233,208,19)" fg:x="322" fg:w="303"/><text x="3.0721%" y="415.50">rt..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (22 samples, 0.19%)</title><rect x="5.2848%" y="389" width="0.1928%" height="15" fill="rgb(216,164,2)" fg:x="603" fg:w="22"/><text x="5.5348%" y="399.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (21 samples, 0.18%)</title><rect x="5.2936%" y="373" width="0.1840%" height="15" fill="rgb(220,129,5)" fg:x="604" fg:w="21"/><text x="5.5436%" y="383.50"></text></g><g><title>rtiow`rtiow::color_ray (325 samples, 2.85%)</title><rect x="2.8221%" y="421" width="2.8484%" height="15" fill="rgb(242,17,10)" fg:x="322" fg:w="325"/><text x="3.0721%" y="431.50">rt..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (22 samples, 0.19%)</title><rect x="5.4777%" y="405" width="0.1928%" height="15" fill="rgb(242,107,0)" fg:x="625" fg:w="22"/><text x="5.7277%" y="415.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (21 samples, 0.18%)</title><rect x="5.4864%" y="389" width="0.1840%" height="15" fill="rgb(251,28,31)" fg:x="626" fg:w="21"/><text x="5.7364%" y="399.50"></text></g><g><title>rtiow`rtiow::color_ray (351 samples, 3.08%)</title><rect x="2.8221%" y="437" width="3.0762%" height="15" fill="rgb(233,223,10)" fg:x="322" fg:w="351"/><text x="3.0721%" y="447.50">rti..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (26 samples, 0.23%)</title><rect x="5.6705%" y="421" width="0.2279%" height="15" fill="rgb(215,21,27)" fg:x="647" fg:w="26"/><text x="5.9205%" y="431.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (25 samples, 0.22%)</title><rect x="5.6792%" y="405" width="0.2191%" height="15" fill="rgb(232,23,21)" fg:x="648" fg:w="25"/><text x="5.9292%" y="415.50"></text></g><g><title>rtiow`rtiow::color_ray (373 samples, 3.27%)</title><rect x="2.8133%" y="453" width="3.2691%" height="15" fill="rgb(244,5,23)" fg:x="321" fg:w="373"/><text x="3.0633%" y="463.50">rti..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (21 samples, 0.18%)</title><rect x="5.8983%" y="437" width="0.1840%" height="15" fill="rgb(226,81,46)" fg:x="673" fg:w="21"/><text x="6.1483%" y="447.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (18 samples, 0.16%)</title><rect x="5.9246%" y="421" width="0.1578%" height="15" fill="rgb(247,70,30)" fg:x="676" fg:w="18"/><text x="6.1746%" y="431.50"></text></g><g><title>rtiow`rtiow::color_ray (394 samples, 3.45%)</title><rect x="2.8046%" y="469" width="3.4531%" height="15" fill="rgb(212,68,19)" fg:x="320" fg:w="394"/><text x="3.0546%" y="479.50">rti..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (20 samples, 0.18%)</title><rect x="6.0824%" y="453" width="0.1753%" height="15" fill="rgb(240,187,13)" fg:x="694" fg:w="20"/><text x="6.3324%" y="463.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (17 samples, 0.15%)</title><rect x="6.1087%" y="437" width="0.1490%" height="15" fill="rgb(223,113,26)" fg:x="697" fg:w="17"/><text x="6.3587%" y="447.50"></text></g><g><title>rtiow`rtiow::color_ray (417 samples, 3.65%)</title><rect x="2.7958%" y="485" width="3.6547%" height="15" fill="rgb(206,192,2)" fg:x="319" fg:w="417"/><text x="3.0458%" y="495.50">rtio..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (22 samples, 0.19%)</title><rect x="6.2577%" y="469" width="0.1928%" height="15" fill="rgb(241,108,4)" fg:x="714" fg:w="22"/><text x="6.5077%" y="479.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (20 samples, 0.18%)</title><rect x="6.2752%" y="453" width="0.1753%" height="15" fill="rgb(247,173,49)" fg:x="716" fg:w="20"/><text x="6.5252%" y="463.50"></text></g><g><title>rtiow`rtiow::color_ray (448 samples, 3.93%)</title><rect x="2.7870%" y="501" width="3.9264%" height="15" fill="rgb(224,114,35)" fg:x="318" fg:w="448"/><text x="3.0370%" y="511.50">rtio..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (30 samples, 0.26%)</title><rect x="6.4505%" y="485" width="0.2629%" height="15" fill="rgb(245,159,27)" fg:x="736" fg:w="30"/><text x="6.7005%" y="495.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (28 samples, 0.25%)</title><rect x="6.4680%" y="469" width="0.2454%" height="15" fill="rgb(245,172,44)" fg:x="738" fg:w="28"/><text x="6.7180%" y="479.50"></text></g><g><title>rtiow`rtiow::color_ray (469 samples, 4.11%)</title><rect x="2.7695%" y="517" width="4.1104%" height="15" fill="rgb(236,23,11)" fg:x="316" fg:w="469"/><text x="3.0195%" y="527.50">rtio..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (19 samples, 0.17%)</title><rect x="6.7134%" y="501" width="0.1665%" height="15" fill="rgb(205,117,38)" fg:x="766" fg:w="19"/><text x="6.9634%" y="511.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (16 samples, 0.14%)</title><rect x="6.7397%" y="485" width="0.1402%" height="15" fill="rgb(237,72,25)" fg:x="769" fg:w="16"/><text x="6.9897%" y="495.50"></text></g><g><title>rtiow`rtiow::color_ray (505 samples, 4.43%)</title><rect x="2.7607%" y="533" width="4.4259%" height="15" fill="rgb(244,70,9)" fg:x="315" fg:w="505"/><text x="3.0107%" y="543.50">rtiow..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (35 samples, 0.31%)</title><rect x="6.8799%" y="517" width="0.3067%" height="15" fill="rgb(217,125,39)" fg:x="785" fg:w="35"/><text x="7.1299%" y="527.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (28 samples, 0.25%)</title><rect x="6.9413%" y="501" width="0.2454%" height="15" fill="rgb(235,36,10)" fg:x="792" fg:w="28"/><text x="7.1913%" y="511.50"></text></g><g><title>rtiow`rtiow::color_ray (538 samples, 4.72%)</title><rect x="2.7607%" y="549" width="4.7152%" height="15" fill="rgb(251,123,47)" fg:x="315" fg:w="538"/><text x="3.0107%" y="559.50">rtiow..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (33 samples, 0.29%)</title><rect x="7.1867%" y="533" width="0.2892%" height="15" fill="rgb(221,13,13)" fg:x="820" fg:w="33"/><text x="7.4367%" y="543.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (29 samples, 0.25%)</title><rect x="7.2217%" y="517" width="0.2542%" height="15" fill="rgb(238,131,9)" fg:x="824" fg:w="29"/><text x="7.4717%" y="527.50"></text></g><g><title>rtiow`rtiow::color_ray (572 samples, 5.01%)</title><rect x="2.7520%" y="565" width="5.0131%" height="15" fill="rgb(211,50,8)" fg:x="314" fg:w="572"/><text x="3.0020%" y="575.50">rtiow`..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (33 samples, 0.29%)</title><rect x="7.4759%" y="549" width="0.2892%" height="15" fill="rgb(245,182,24)" fg:x="853" fg:w="33"/><text x="7.7259%" y="559.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (27 samples, 0.24%)</title><rect x="7.5285%" y="533" width="0.2366%" height="15" fill="rgb(242,14,37)" fg:x="859" fg:w="27"/><text x="7.7785%" y="543.50"></text></g><g><title>rtiow`rtiow::color_ray (604 samples, 5.29%)</title><rect x="2.7520%" y="581" width="5.2936%" height="15" fill="rgb(246,228,12)" fg:x="314" fg:w="604"/><text x="3.0020%" y="591.50">rtiow`..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (32 samples, 0.28%)</title><rect x="7.7651%" y="565" width="0.2805%" height="15" fill="rgb(213,55,15)" fg:x="886" fg:w="32"/><text x="8.0151%" y="575.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (26 samples, 0.23%)</title><rect x="7.8177%" y="549" width="0.2279%" height="15" fill="rgb(209,9,3)" fg:x="892" fg:w="26"/><text x="8.0677%" y="559.50"></text></g><g><title>rtiow`rtiow::color_ray (630 samples, 5.52%)</title><rect x="2.7344%" y="597" width="5.5215%" height="15" fill="rgb(230,59,30)" fg:x="312" fg:w="630"/><text x="2.9844%" y="607.50">rtiow`r..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (24 samples, 0.21%)</title><rect x="8.0456%" y="581" width="0.2103%" height="15" fill="rgb(209,121,21)" fg:x="918" fg:w="24"/><text x="8.2956%" y="591.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (21 samples, 0.18%)</title><rect x="8.0719%" y="565" width="0.1840%" height="15" fill="rgb(220,109,13)" fg:x="921" fg:w="21"/><text x="8.3219%" y="575.50"></text></g><g><title>rtiow`rtiow::color_ray (654 samples, 5.73%)</title><rect x="2.7344%" y="613" width="5.7318%" height="15" fill="rgb(232,18,1)" fg:x="312" fg:w="654"/><text x="2.9844%" y="623.50">rtiow`r..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (24 samples, 0.21%)</title><rect x="8.2559%" y="597" width="0.2103%" height="15" fill="rgb(215,41,42)" fg:x="942" fg:w="24"/><text x="8.5059%" y="607.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (21 samples, 0.18%)</title><rect x="8.2822%" y="581" width="0.1840%" height="15" fill="rgb(224,123,36)" fg:x="945" fg:w="21"/><text x="8.5322%" y="591.50"></text></g><g><title>rtiow`rtiow::color_ray (694 samples, 6.08%)</title><rect x="2.7257%" y="629" width="6.0824%" height="15" fill="rgb(240,125,3)" fg:x="311" fg:w="694"/><text x="2.9757%" y="639.50">rtiow`rt..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (39 samples, 0.34%)</title><rect x="8.4663%" y="613" width="0.3418%" height="15" fill="rgb(205,98,50)" fg:x="966" fg:w="39"/><text x="8.7163%" y="623.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (37 samples, 0.32%)</title><rect x="8.4838%" y="597" width="0.3243%" height="15" fill="rgb(205,185,37)" fg:x="968" fg:w="37"/><text x="8.7338%" y="607.50"></text></g><g><title>rtiow`rtiow::color_ray (741 samples, 6.49%)</title><rect x="2.7082%" y="645" width="6.4943%" height="15" fill="rgb(238,207,15)" fg:x="309" fg:w="741"/><text x="2.9582%" y="655.50">rtiow`rti..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (45 samples, 0.39%)</title><rect x="8.8081%" y="629" width="0.3944%" height="15" fill="rgb(213,199,42)" fg:x="1005" fg:w="45"/><text x="9.0581%" y="639.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (39 samples, 0.34%)</title><rect x="8.8606%" y="613" width="0.3418%" height="15" fill="rgb(235,201,11)" fg:x="1011" fg:w="39"/><text x="9.1106%" y="623.50"></text></g><g><title>rtiow`rtiow::color_ray (776 samples, 6.80%)</title><rect x="2.6906%" y="661" width="6.8011%" height="15" fill="rgb(207,46,11)" fg:x="307" fg:w="776"/><text x="2.9406%" y="671.50">rtiow`rti..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (33 samples, 0.29%)</title><rect x="9.2025%" y="645" width="0.2892%" height="15" fill="rgb(241,35,35)" fg:x="1050" fg:w="33"/><text x="9.4525%" y="655.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (25 samples, 0.22%)</title><rect x="9.2726%" y="629" width="0.2191%" height="15" fill="rgb(243,32,47)" fg:x="1058" fg:w="25"/><text x="9.5226%" y="639.50"></text></g><g><title>rtiow`rtiow::color_ray (820 samples, 7.19%)</title><rect x="2.6731%" y="677" width="7.1867%" height="15" fill="rgb(247,202,23)" fg:x="305" fg:w="820"/><text x="2.9231%" y="687.50">rtiow`rtio..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (42 samples, 0.37%)</title><rect x="9.4917%" y="661" width="0.3681%" height="15" fill="rgb(219,102,11)" fg:x="1083" fg:w="42"/><text x="9.7417%" y="671.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (34 samples, 0.30%)</title><rect x="9.5618%" y="645" width="0.2980%" height="15" fill="rgb(243,110,44)" fg:x="1091" fg:w="34"/><text x="9.8118%" y="655.50"></text></g><g><title>rtiow`rtiow::color_ray (875 samples, 7.67%)</title><rect x="2.6731%" y="693" width="7.6687%" height="15" fill="rgb(222,74,54)" fg:x="305" fg:w="875"/><text x="2.9231%" y="703.50">rtiow`rtio..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (55 samples, 0.48%)</title><rect x="9.8598%" y="677" width="0.4820%" height="15" fill="rgb(216,99,12)" fg:x="1125" fg:w="55"/><text x="10.1098%" y="687.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (47 samples, 0.41%)</title><rect x="9.9299%" y="661" width="0.4119%" height="15" fill="rgb(226,22,26)" fg:x="1133" fg:w="47"/><text x="10.1799%" y="671.50"></text></g><g><title>rtiow`rtiow::color_ray (930 samples, 8.15%)</title><rect x="2.6556%" y="709" width="8.1507%" height="15" fill="rgb(217,163,10)" fg:x="303" fg:w="930"/><text x="2.9056%" y="719.50">rtiow`rtiow..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (53 samples, 0.46%)</title><rect x="10.3418%" y="693" width="0.4645%" height="15" fill="rgb(213,25,53)" fg:x="1180" fg:w="53"/><text x="10.5918%" y="703.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (47 samples, 0.41%)</title><rect x="10.3944%" y="677" width="0.4119%" height="15" fill="rgb(252,105,26)" fg:x="1186" fg:w="47"/><text x="10.6444%" y="687.50"></text></g><g><title>rtiow`rtiow::color_ray (990 samples, 8.68%)</title><rect x="2.6468%" y="725" width="8.6766%" height="15" fill="rgb(220,39,43)" fg:x="302" fg:w="990"/><text x="2.8968%" y="735.50">rtiow`rtiow:..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (59 samples, 0.52%)</title><rect x="10.8063%" y="709" width="0.5171%" height="15" fill="rgb(229,68,48)" fg:x="1233" fg:w="59"/><text x="11.0563%" y="719.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (55 samples, 0.48%)</title><rect x="10.8414%" y="693" width="0.4820%" height="15" fill="rgb(252,8,32)" fg:x="1237" fg:w="55"/><text x="11.0914%" y="703.50"></text></g><g><title>rtiow`rtiow::color_ray (1,046 samples, 9.17%)</title><rect x="2.6380%" y="741" width="9.1674%" height="15" fill="rgb(223,20,43)" fg:x="301" fg:w="1046"/><text x="2.8880%" y="751.50">rtiow`rtiow::..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (55 samples, 0.48%)</title><rect x="11.3234%" y="725" width="0.4820%" height="15" fill="rgb(229,81,49)" fg:x="1292" fg:w="55"/><text x="11.5734%" y="735.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (52 samples, 0.46%)</title><rect x="11.3497%" y="709" width="0.4557%" height="15" fill="rgb(236,28,36)" fg:x="1295" fg:w="52"/><text x="11.5997%" y="719.50"></text></g><g><title>rtiow`rtiow::color_ray (1,137 samples, 9.96%)</title><rect x="2.6030%" y="757" width="9.9649%" height="15" fill="rgb(249,185,26)" fg:x="297" fg:w="1137"/><text x="2.8530%" y="767.50">rtiow`rtiow::c..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (87 samples, 0.76%)</title><rect x="11.8054%" y="741" width="0.7625%" height="15" fill="rgb(249,174,33)" fg:x="1347" fg:w="87"/><text x="12.0554%" y="751.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (75 samples, 0.66%)</title><rect x="11.9106%" y="725" width="0.6573%" height="15" fill="rgb(233,201,37)" fg:x="1359" fg:w="75"/><text x="12.1606%" y="735.50"></text></g><g><title>rtiow`rtiow::color_ray (1,218 samples, 10.67%)</title><rect x="2.5679%" y="773" width="10.6748%" height="15" fill="rgb(221,78,26)" fg:x="293" fg:w="1218"/><text x="2.8179%" y="783.50">rtiow`rtiow::col..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (77 samples, 0.67%)</title><rect x="12.5679%" y="757" width="0.6748%" height="15" fill="rgb(250,127,30)" fg:x="1434" fg:w="77"/><text x="12.8179%" y="767.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (66 samples, 0.58%)</title><rect x="12.6643%" y="741" width="0.5784%" height="15" fill="rgb(230,49,44)" fg:x="1445" fg:w="66"/><text x="12.9143%" y="751.50"></text></g><g><title>rtiow`rtiow::color_ray (1,366 samples, 11.97%)</title><rect x="2.5241%" y="789" width="11.9720%" height="15" fill="rgb(229,67,23)" fg:x="288" fg:w="1366"/><text x="2.7741%" y="799.50">rtiow`rtiow::color..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (143 samples, 1.25%)</title><rect x="13.2428%" y="773" width="1.2533%" height="15" fill="rgb(249,83,47)" fg:x="1511" fg:w="143"/><text x="13.4928%" y="783.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (131 samples, 1.15%)</title><rect x="13.3479%" y="757" width="1.1481%" height="15" fill="rgb(215,43,3)" fg:x="1523" fg:w="131"/><text x="13.5979%" y="767.50"></text></g><g><title>rtiow`rtiow::color_ray (1,543 samples, 13.52%)</title><rect x="2.5066%" y="805" width="13.5232%" height="15" fill="rgb(238,154,13)" fg:x="286" fg:w="1543"/><text x="2.7566%" y="815.50">rtiow`rtiow::color_r..</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (175 samples, 1.53%)</title><rect x="14.4961%" y="789" width="1.5337%" height="15" fill="rgb(219,56,2)" fg:x="1654" fg:w="175"/><text x="14.7461%" y="799.50"></text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (151 samples, 1.32%)</title><rect x="14.7064%" y="773" width="1.3234%" height="15" fill="rgb(233,0,4)" fg:x="1678" fg:w="151"/><text x="14.9564%" y="783.50"></text></g><g><title>rtiow`rtiow::color_ray (1,954 samples, 17.13%)</title><rect x="2.4014%" y="821" width="17.1253%" height="15" fill="rgb(235,30,7)" fg:x="274" fg:w="1954"/><text x="2.6514%" y="831.50">rtiow`rtiow::color_ray</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (399 samples, 3.50%)</title><rect x="16.0298%" y="805" width="3.4969%" height="15" fill="rgb(250,79,13)" fg:x="1829" fg:w="399"/><text x="16.2798%" y="815.50">rti..</text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (357 samples, 3.13%)</title><rect x="16.3979%" y="789" width="3.1288%" height="15" fill="rgb(211,146,34)" fg:x="1871" fg:w="357"/><text x="16.6479%" y="799.50">rti..</text></g><g><title>rtiow`rtiow::color_ray (2,665 samples, 23.36%)</title><rect x="2.2787%" y="837" width="23.3567%" height="15" fill="rgb(228,22,38)" fg:x="260" fg:w="2665"/><text x="2.5287%" y="847.50">rtiow`rtiow::color_ray</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (697 samples, 6.11%)</title><rect x="19.5267%" y="821" width="6.1087%" height="15" fill="rgb(235,168,5)" fg:x="2228" fg:w="697"/><text x="19.7767%" y="831.50">rtiow`rt..</text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (607 samples, 5.32%)</title><rect x="20.3155%" y="805" width="5.3199%" height="15" fill="rgb(221,155,16)" fg:x="2318" fg:w="607"/><text x="20.5655%" y="815.50">rtiow`&lt;..</text></g><g><title>rtiow`rtiow::color_ray (5,834 samples, 51.13%)</title><rect x="1.6301%" y="853" width="51.1306%" height="15" fill="rgb(215,215,53)" fg:x="186" fg:w="5834"/><text x="1.8801%" y="863.50">rtiow`rtiow::color_ray</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (3,095 samples, 27.13%)</title><rect x="25.6354%" y="837" width="27.1253%" height="15" fill="rgb(223,4,10)" fg:x="2925" fg:w="3095"/><text x="25.8854%" y="847.50">rtiow`rtiow::hittable_list::HittableList::h..</text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (2,722 samples, 23.86%)</title><rect x="28.9045%" y="821" width="23.8563%" height="15" fill="rgb(234,103,6)" fg:x="3298" fg:w="2722"/><text x="29.1545%" y="831.50">rtiow`&lt;rtiow::sphere::ObjectSphere as ..</text></g><g><title>rtiow`rtiow::color_ray (11,311 samples, 99.13%)</title><rect x="0.5872%" y="869" width="99.1323%" height="15" fill="rgb(227,97,0)" fg:x="67" fg:w="11311"/><text x="0.8372%" y="879.50">rtiow`rtiow::color_ray</text></g><g><title>rtiow`rtiow::hittable_list::HittableList::hit (5,358 samples, 46.96%)</title><rect x="52.7607%" y="853" width="46.9588%" height="15" fill="rgb(234,150,53)" fg:x="6020" fg:w="5358"/><text x="53.0107%" y="863.50">rtiow`rtiow::hittable_list::HittableList::hit</text></g><g><title>rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit (4,742 samples, 41.56%)</title><rect x="58.1595%" y="837" width="41.5600%" height="15" fill="rgb(228,201,54)" fg:x="6636" fg:w="4742"/><text x="58.4095%" y="847.50">rtiow`&lt;rtiow::sphere::ObjectSphere as rtiow::hittable::Hittable&gt;::hit</text></g><g><title>rtiow`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (23 samples, 0.20%)</title><rect x="99.7634%" y="773" width="0.2016%" height="15" fill="rgb(222,22,37)" fg:x="11383" fg:w="23"/><text x="100.0134%" y="783.50"></text></g><g><title>rtiow`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (23 samples, 0.20%)</title><rect x="99.7634%" y="757" width="0.2016%" height="15" fill="rgb(237,53,32)" fg:x="11383" fg:w="23"/><text x="100.0134%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`write (23 samples, 0.20%)</title><rect x="99.7634%" y="741" width="0.2016%" height="15" fill="rgb(233,25,53)" fg:x="11383" fg:w="23"/><text x="100.0134%" y="751.50"></text></g><g><title>all (11,410 samples, 100%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(210,40,34)" fg:x="0" fg:w="11410"/><text x="0.2500%" y="991.50"></text></g><g><title>dyld`start (11,410 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(241,220,44)" fg:x="0" fg:w="11410"/><text x="0.2500%" y="975.50">dyld`start</text></g><g><title>rtiow`main (11,409 samples, 99.99%)</title><rect x="0.0088%" y="949" width="99.9912%" height="15" fill="rgb(235,28,35)" fg:x="1" fg:w="11409"/><text x="0.2588%" y="959.50">rtiow`main</text></g><g><title>rtiow`std::rt::lang_start_internal (11,409 samples, 99.99%)</title><rect x="0.0088%" y="933" width="99.9912%" height="15" fill="rgb(210,56,17)" fg:x="1" fg:w="11409"/><text x="0.2588%" y="943.50">rtiow`std::rt::lang_start_internal</text></g><g><title>rtiow`std::rt::lang_start::_{{closure}} (11,409 samples, 99.99%)</title><rect x="0.0088%" y="917" width="99.9912%" height="15" fill="rgb(224,130,29)" fg:x="1" fg:w="11409"/><text x="0.2588%" y="927.50">rtiow`std::rt::lang_start::_{{closure}}</text></g><g><title>rtiow`std::sys_common::backtrace::__rust_begin_short_backtrace (11,409 samples, 99.99%)</title><rect x="0.0088%" y="901" width="99.9912%" height="15" fill="rgb(235,212,8)" fg:x="1" fg:w="11409"/><text x="0.2588%" y="911.50">rtiow`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>rtiow`rtiow::main (11,408 samples, 99.98%)</title><rect x="0.0175%" y="885" width="99.9825%" height="15" fill="rgb(223,33,50)" fg:x="2" fg:w="11408"/><text x="0.2675%" y="895.50">rtiow`rtiow::main</text></g><g><title>rtiow`std::io::stdio::_print (32 samples, 0.28%)</title><rect x="99.7195%" y="869" width="0.2805%" height="15" fill="rgb(219,149,13)" fg:x="11378" fg:w="32"/><text x="99.9695%" y="879.50"></text></g><g><title>rtiow`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (30 samples, 0.26%)</title><rect x="99.7371%" y="853" width="0.2629%" height="15" fill="rgb(250,156,29)" fg:x="11380" fg:w="30"/><text x="99.9871%" y="863.50"></text></g><g><title>rtiow`core::fmt::write (29 samples, 0.25%)</title><rect x="99.7458%" y="837" width="0.2542%" height="15" fill="rgb(216,193,19)" fg:x="11381" fg:w="29"/><text x="99.9958%" y="847.50"></text></g><g><title>rtiow`&lt;rtiow::color::Color as core::fmt::Display&gt;::fmt (29 samples, 0.25%)</title><rect x="99.7458%" y="821" width="0.2542%" height="15" fill="rgb(216,135,14)" fg:x="11381" fg:w="29"/><text x="99.9958%" y="831.50"></text></g><g><title>rtiow`core::fmt::Formatter::write_fmt (29 samples, 0.25%)</title><rect x="99.7458%" y="805" width="0.2542%" height="15" fill="rgb(241,47,5)" fg:x="11381" fg:w="29"/><text x="99.9958%" y="815.50"></text></g><g><title>rtiow`core::fmt::write (28 samples, 0.25%)</title><rect x="99.7546%" y="789" width="0.2454%" height="15" fill="rgb(233,42,35)" fg:x="11382" fg:w="28"/><text x="100.0046%" y="799.50"></text></g><g><title>rtiow`core::fmt::num::imp::_&lt;impl core::fmt::Display for u32&gt;::fmt (4 samples, 0.04%)</title><rect x="99.9649%" y="773" width="0.0351%" height="15" fill="rgb(231,13,6)" fg:x="11406" fg:w="4"/><text x="100.2149%" y="783.50"></text></g><g><title>rtiow`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="99.9825%" y="757" width="0.0175%" height="15" fill="rgb(207,181,40)" fg:x="11408" fg:w="2"/><text x="100.2325%" y="767.50"></text></g></svg></svg>